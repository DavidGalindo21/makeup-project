<%- include('./layout/header') %>
<%- include('./layout/headerAdmin') %>

    <!-- Espaciador para separar el menú del contenido -->
    <div class="mt-5 pt-4"></div>

        <!-- Contenedor de alertas con datos del servidor -->
    <div id="alerts-container" data-success="<%= successMessage || '' %>" data-errors="<%= JSON.stringify(errores || []) %>">
        </div>

        <script>
            document.addEventListener('DOMContentLoaded', () => {
                const alertsContainer = document.getElementById('alerts-container');
                const successMessage = alertsContainer.dataset.success.trim();
                const errores = JSON.parse(alertsContainer.dataset.errors || '[]');

                if (successMessage) {
                    Swal.fire({
                        icon: 'success',
                        title: '¡Éxito!',
                        text: successMessage,
                        confirmButtonText: 'Aceptar'
                    });
                }


            });
        </script>





    <div class="container-fluid py-4">
        <!-- Encabezado de la página -->
        <div class="row mb-4">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <h2 class="h3 mb-0 text-dark">Gestión de Pedidos</h2>
                    <div class="d-flex align-items-center">
                        <span class="badge bg-dark me-2">Total Pedidos: <%= Object.keys(pedidosAgrupados).length %></span>
                       
                    </div>
                </div>
                <hr class="my-3 border-dark">
            </div>
        </div>

        <!-- Filtros y búsqueda -->
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="input-group">
                    <input type="text" class="form-control border-dark" id="searchPedidos" placeholder="Buscar pedidos por nombre...">
                    <button class="btn btn-dark" type="button">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-6 text-end">
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-dark active" data-view="cards">
                        <i class="bi bi-grid-3x3-gap"></i> Tarjetas
                    </button>
                    <button type="button" class="btn btn-outline-dark" data-view="table">
                        <i class="bi bi-table"></i> Tabla
                    </button>
                </div>
            </div>
        </div>

        <!-- Vista de tarjetas (predeterminada) -->
        <div id="cards-view" class="row">
            <% Object.entries(pedidosAgrupados).forEach(([fecha, grupo]) => { %>
                <div class="col-12 mb-4">
                    <div class="card shadow-sm border-dark">
                        <div class="card-header bg-dark text-white py-3">
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="card-title mb-0 text-white">Pedido realizado el <%= fecha %></h5>
                                <span class="badge bg-light text-dark"><%= grupo.pedidos.length %> productos</span>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <% grupo.pedidos.forEach(pedido => { %>
                                    <div class="col-md-6 col-lg-4 mb-4 pedido-card">
                                        <div class="card h-100 shadow-sm border-dark">
                                            <div class="card-header bg-white py-2 d-flex justify-content-between align-items-center">
                                                <span class="badge <%= pedido.status === 'pendiente' ? 'bg-warning text-dark' : (pedido.status === 'en proceso' ? 'bg-info text-dark' : 'bg-success') %>">
                                                    <%= pedido.status %>
                                                </span>
                                                
                                                <% if(pedido.status != "completado"){ %>
                                                    <button type="button" class="btn btn-outline-danger btn-sm eliminar" onclick="eliminarPedido('<%= pedido.id %>')">
                                                        <i class="bi bi-trash"></i> Eliminar pedido
                                                    </button>
                                                <%}%>
                                            </div>
                                            <div class="card-body p-3">
                                                <div class="d-flex mb-3">
                                                    <img src="<%= pedido.imagen %>" alt="Producto" class="img-thumbnail me-3" style="width: 80px; height: 80px; object-fit: cover;" />
                                                    <div>
                                                        <h6 class="card-title mb-1 text-dark"><%= pedido.producto?.nombre %></h6>
                                                        <p class="text-muted small mb-1">Cliente: <%= pedido.usuario?.Nombre %></p>
                                                        <p class="text-muted small mb-1">Tel: <%= pedido.usuario?.Telefono %></p>
                                                        <p class="text-dark fw-bold mb-0">$<%= pedido.precioTotal %></p>
                                                    </div>
                                                </div>
                                                <div class="row g-2 mb-3">
                                                    <div class="col-6">
                                                        <div class="p-2 bg-light rounded">
                                                            <small class="text-muted d-block">Cantidad</small>
                                                            <span class="fw-bold text-dark"><%= pedido.cantidad %></span>
                                                        </div>
                                                    </div>
                                                    <div class="col-6">
                                                        <div class="p-2 bg-light rounded">
                                                            <small class="text-muted d-block">Precio unit.</small>
                                                            <span class="fw-bold text-dark">$<%= pedido.producto?.precio_venta %></span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="mt-3">
                                                    <label class="form-label small text-dark">Cambiar estado:</label>
                                                    <select
                                                    class="form-select status-selector border-dark"
                                                    data-id="<%= pedido.id %>"
                                                    onchange="cambiarEstado(this)"
                                                  >
                                                    <% ['pendiente', 'en proceso', 'completado'].forEach(estatus => { %>
                                                      <option value="<%= estatus %>" <% if (pedido.status === estatus) { %> selected <% } %>>
                                                        <%= estatus.charAt(0).toUpperCase() + estatus.slice(1) %>
                                                      </option>
                                                    <% }) %>
                                                  </select>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                <% }) %>
                            </div>
                            <div class="card-footer bg-light py-3">
                                <div class="d-flex justify-content-between align-items-center">
                                    <div>
                                        <span class="text-muted">Total productos: <strong class="text-dark"><%= grupo.totalCantidad %></strong></span>
                                    </div>
                                    <div>
                                        <span class="text-dark fw-bold">Total: $<%= grupo.totalPrecio.toFixed(2) %></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            <% }) %>
        </div>

        <!-- Vista de tabla (oculta por defecto) -->
        <div id="table-view" class="row d-none">
            <div class="col-12">
                <div class="card shadow-sm border-dark">
                    <div class="card-header bg-dark text-white py-3">
                        <h5 class="card-title mb-0">Lista de Pedidos</h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-dark">
                                    <tr>
                                        <th scope="col">Cliente</th>
                                        <th scope="col">Teléfono</th>
                                        <th scope="col">Producto</th>
                                        <th scope="col">Imagen</th>
                                        <th scope="col">Precio</th>
                                        <th scope="col">Cantidad</th>
                                        <th scope="col">Lugar de Entrega</th>
                                        <th scope="col">Costo Extra</th>
                                        <th scope="col">Total</th>
                                        <th scope="col">Estatus</th>
                                        <th scope="col">Acciones</th>
                                    </tr>
                                </thead>
                                <tbody id="pedido-dashboard">
                                    <% Object.entries(pedidosAgrupados).forEach(([fecha, grupo]) => { %>
                                        <tr class="table-secondary">
                                            <td colspan="11" class="py-2 fw-bold">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <span>Pedido realizado el <%= fecha %></span>
                                                    <span class="badge bg-dark"><%= grupo.pedidos.length %> productos</span>
                                                </div>
                                            </td>
                                        </tr>
                          
                                <% grupo.pedidos.forEach(pedido => { %>
                                            <tr>
                                    <td><%= pedido.usuario?.Nombre %></td>
                                    <td><%= pedido.usuario?.Telefono %></td>
                                    <td><%= pedido.producto?.nombre %></td>
                                                <td>
                                                    <img src="<%= pedido.imagen %>" alt="Producto" class="img-thumbnail" style="width: 60px; height: 60px; object-fit: cover;" />
                                                </td>
                                    <td>$<%= pedido.producto?.precio_venta %></td>
                                    <td><%= pedido.cantidad %></td>
                                    <td>$<%= pedido.precioTotal %></td>
                                    <td>
                                                    <span class="badge <%= pedido.status === 'pendiente' ? 'bg-warning text-dark' : (pedido.status === 'en proceso' ? 'bg-info text-dark' : 'bg-success') %>">
                                        <%= pedido.status %>
                                      </span>
                                    </td>
                                                <td>
                                                    <div class="d-flex flex-column gap-1">
                                                        <select class="form-select form-select-sm status-selector border-dark" data-id="<%= pedido.id %>">
                                        <% ['pendiente', 'en proceso', 'completado'].forEach(estatus => { %>
                                                                <option value="<%= estatus %>" <% if (pedido.status === estatus) { %> selected <% } %>>
                                                                    <%= estatus.charAt(0).toUpperCase() + estatus.slice(1) %>
                                                                </option>
                                        <% }) %>
                                      </select>
                                      <% if(pedido.status != "completado"){ %>
                                        <button type="button" class="btn btn-outline-danger btn-sm eliminar" onclick="eliminarPedido('<%= pedido.id %>')">
                                            <i class="bi bi-trash"></i> Eliminar pedido
                                        </button>
                                    <%}%>
                                                          
                                                          
                                                    </div>
                                    </td>
                                  </tr>
                                <% }) %>
                          
                                <!-- Resumen del grupo -->
                                        <tr class="table-secondary">
                                            <td colspan="5" class="fw-bold">Totales del grupo:</td>
                                            <td class="fw-bold"><%= grupo.totalCantidad %> productos</td>
                                            <td colspan="3" class="fw-bold">$<%= grupo.totalPrecio.toFixed(2) %></td>
                                  <td colspan="2"></td>
                                </tr>
                              <% }) %>
                            </tbody>
                          </table>
                        </div>
                    </div>
                </div>
           </div>
        </div>

        <!-- Botón de actualizar -->
        <div class="row mt-4">
            <div class="col-12 text-end">
                <button class="btn btn-outline-secondary" id="refreshPedidos">
                    <i class="bi bi-arrow-clockwise me-1"></i> Actualizar
                </button>
            </div>
        </div>
    </div>

    <!-- Estilos personalizados -->
    <style>
        .table th {
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.8rem;
        }
        
        .table td {
            vertical-align: middle;
        }
        
        .status-selector {
            width: 100%;
            font-size: 0.8rem;
        }
        
        .img-thumbnail {
            border-radius: 4px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .table-primary {
            background-color: rgba(13, 110, 253, 0.1) !important;
        }
        
        .table-secondary {
            background-color: rgba(108, 117, 125, 0.1) !important;
        }
        
        .pedido-card {
            transition: transform 0.2s;
        }
        
        .pedido-card:hover {
            transform: translateY(-5px);
        }
        .card-body{
          background-color: rgb(237, 237, 237);
        }
        .status-selector{
          background-color: #fff;
          padding: 10px;
        }
        .badge{
            font-size: 1.2rem;
        }
        .eliminar{
            font-weight: .5rem;
            padding: 0 10px;
        }
    </style>

    <!-- Scripts -->
        <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Función para actualizar el estado de un pedido
            document.querySelectorAll('.status-selector').forEach(select => {
                select.addEventListener('change', function() {
                    const pedidoId = this.dataset.id;
                    const newStatus = this.value;
                    
                    // Aquí puedes agregar la lógica para actualizar el estado en el servidor
                    console.log(`Actualizando pedido ${pedidoId} a estado: ${newStatus}`);
                    
                    // Actualizar el badge visualmente
                    const card = this.closest('.card');
                    const badge = card.querySelector('.badge');
                    badge.textContent = newStatus;
                    
                    // Actualizar clases del badge según el estado
                    badge.classList.remove('bg-warning', 'bg-info', 'bg-success');
                    if (newStatus === 'pendiente') {
                        badge.classList.add('bg-warning');
                    } else if (newStatus === 'en proceso') {
                        badge.classList.add('bg-info');
                    } else if (newStatus === 'completado') {
                        badge.classList.add('bg-success');
                    }
                });
            });
            
            // Función para buscar pedidos
            document.getElementById('searchPedidos').addEventListener('keyup', function() {
                const searchTerm = this.value.toLowerCase();
                const cards = document.querySelectorAll('.pedido-card');
                
                cards.forEach(card => {
                    const text = card.textContent.toLowerCase();
                    if (text.includes(searchTerm)) {
                        card.style.display = '';
                    } else {
                        card.style.display = 'none';
                    }
                });
            });
            
            // Función para cambiar entre vistas
            document.querySelectorAll('[data-view]').forEach(button => {
                button.addEventListener('click', function() {
                    const viewType = this.dataset.view;
                    
                    // Actualizar botones
                    document.querySelectorAll('[data-view]').forEach(btn => {
                        btn.classList.remove('active');
                    });
                    this.classList.add('active');
                    
                    // Mostrar/ocultar vistas
                    if (viewType === 'cards') {
                        document.getElementById('cards-view').classList.remove('d-none');
                        document.getElementById('table-view').classList.add('d-none');
                    } else {
                        document.getElementById('cards-view').classList.add('d-none');
                        document.getElementById('table-view').classList.remove('d-none');
                    }
                });
            });
            
            // Función para refrescar la página
            document.getElementById('refreshPedidos').addEventListener('click', function() {
                window.location.reload();
            });
            
            // Función para exportar pedidos (simulada)
            document.getElementById('exportarPedidos').addEventListener('click', function() {
                Swal.fire({
                    title: 'Exportar Pedidos',
                    text: 'Esta función exportará todos los pedidos a un archivo CSV',
                    icon: 'info',
                    showCancelButton: true,
                    confirmButtonText: 'Exportar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Aquí iría la lógica para exportar
                        Swal.fire('¡Exportado!', 'Los pedidos han sido exportados correctamente', 'success');
                    }
                });
            });
        });

        async function cambiarEstado(selectElement) {
  const idStatus = selectElement.dataset.id;
  const nuevoEstado = selectElement.value;


  const valores = {
    idPedido: parseInt(idStatus),
    nuevoEstado: nuevoEstado 
  };
  console.log(valores)

  try {
    const response = await fetch('/admin/pedidos/actualizarestado', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify(valores)
    });

    const data = await response.json();

    if (data.success) {
  Swal.fire({
    icon: 'success',
    title: '¡Éxito!',
    text: 'Estado actualizado correctamente',
    confirmButtonText: 'Contactar por WhatsApp'
  }).then(response => {
    if (response.isConfirmed && data.telefono) {
      const numero = data.telefono.replace(/\D/g, ''); // Quitamos guiones, espacios, etc.
      const mensaje = `¡Gracias por tu pedido! 

Tu pedido ya está en proceso, para continuar con la preparación te pedimos realizar el pago. Puedes hacerlo de las siguientes maneras:

Formas de pago:

- Transferencia bancaria (Banco azteca): 1234567890 a nombre de Alexandra

- Depósito en  OXXO (Spinbyoxxo):

- Efectivo (sólo en entregas personales)

Entregas: Si deseas recibir tu pedido en un punto específico, se añadirá un costo extra al total del pedido.
La punta: Entrega sin costo extra.

Por favor indícanos tu municipio para verificar la distancia y darte el costo de entrega correspondiente.

Confirma tu método de pago y municipio por este medio para continuar

¡Gracias por confiar en nosotros!`;

window.location.href = `https://wa.me/52${numero}?text=${encodeURIComponent(mensaje)}`;

    }
  });
}
if(data.nuevoEstado === 'completado'){
    Swal.fire({
    icon: 'success',
    title: '¡Éxito!',
    text: 'Estado actualizado correctamente',
    confirmButtonText: 'Contactar por WhatsApp'
  }).then(response => {
    if (response.isConfirmed && data.telefono) {
      const numero = data.telefono.replace(/\D/g, ''); // Quitamos guiones, espacios, etc.
      const mensaje = `
    ¡Gracias por tu compra!
      
    Espero que tu experiencia haya sido de tu agrado y que hayas quedado satisfecho con el producto.

    Si tienes alguna pregunta o inquietud, no dudes en contactarnos. Estamos aquí para ayudarte.

    Si deseas realizar algun otro pedido, accede con tus tados y realizalo, ¡Te esperamos!.
      `;

window.location.href = `https://wa.me/52${numero}?text=${encodeURIComponent(mensaje)}`;

    }
  });
}
 else {
      throw new Error('Respuesta inválida del servidor');
    }

  } catch (error) {
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'No se pudo actualizar el estado del pedido',
      confirmButtonText: 'Aceptar'
    });
    console.error(error);
  }
}

        async function eliminarPedido(id) {
            try {
                const result = await Swal.fire({
                    title: '¿Estás seguro?',
                    text: "¡Esta acción no se puede deshacer!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, eliminar',
                    cancelButtonText: 'Cancelar'
                });

                if (result.isConfirmed) {
                    const response = await fetch(`/admin/pedidos/eliminarpedido/${id}`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    });

                    const data = await response.json();

                    if (data.success) {
                        Swal.fire({
                            title: 'Eliminado',
                            text: data.message,
                            icon: 'success',
                            timer: 2000,
                            showConfirmButton: false
                        }).then(() => {
                            location.reload();
                        });
                    } else {
                        throw new Error(data.message || 'Error al eliminar el pedido');
                    }
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error',
                    text: error.message,
                    icon: 'error',
                    confirmButtonText: 'Aceptar'
                });
            }
        }
        </script>
        <!--== Wrapper End ==-->

        <!-- JS Vendor, Plugins & Activation Script Files -->

        <!-- Vendors JS -->
        <script src="/js/vendor/modernizr-3.11.7.min.js"></script>
        <script src="/js/vendor/jquery-3.6.0.min.js"></script>
        <script src="/js/vendor/jquery-migrate-3.3.2.min.js"></script>
        <script src="/js/vendor/bootstrap.bundle.min.js"></script>

        <!-- Plugins JS -->
        <script src="/js/plugins/swiper-bundle.min.js"></script>
        <script src="/js/plugins/fancybox.min.js"></script>
        <script src="/js/plugins/jquery.nice-select.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>


        <!-- Custom Main JS -->
        <script src="/js/main.js"></script>
        <script src="/js/carrito.js"></script>

        </body>

        </html>